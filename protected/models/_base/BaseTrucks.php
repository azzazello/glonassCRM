<?php

/**
 * This is the model base class for the table "trucks".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Trucks".
 *
 * Columns in table "trucks" available as properties of the model,
 * followed by relations of table "trucks" available as properties of the model.
 *
 * @property integer $id
 * @property string $plate
 * @property double $daily_license_fee
 * @property string $fio
 * @property integer $is_act
 * @property integer $is_conctract
 * @property string $contract_number
 * @property string $act_number
 * @property integer $balance_license_fee
 * @property string $comment
 * @property integer $installation_is_close
 * @property integer $type
 *
 * @property LicenseDailyFeeAmountByCar[] $licenseDailyFeeAmountByCars
 * @property Payments[] $payments
 * @property Glonass $glonass
 */
abstract class BaseTrucks extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'trucks';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Trucks|Trucks', $n);
	}

	public static function representingColumn() {
		return 'plate';
	}

	public function rules() {
		return array(
			array('plate, daily_license_fee', 'required'),
			array('is_act, is_conctract, balance_license_fee, installation_is_close, type', 'numerical', 'integerOnly'=>true),
			array('daily_license_fee', 'numerical'),
			array('plate, contract_number, act_number', 'length', 'max'=>25),
			array('fio, comment', 'safe'),
			array('fio, is_act, is_conctract, contract_number, act_number, balance_license_fee, comment, installation_is_close, type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, plate, daily_license_fee, fio, is_act, is_conctract, contract_number, act_number, balance_license_fee, comment, installation_is_close, type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'licenseDailyFeeAmountByCars' => array(self::HAS_MANY, 'LicenseDailyFeeAmountByCar', 'plate'),
			'payments' => array(self::HAS_MANY, 'Payments', 'plate'),
            'glonass'=>array(self::HAS_ONE, 'Glonass', array('num_auto'=>'plate')),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'plate' => Yii::t('app', 'Plate'),
			'daily_license_fee' => Yii::t('app', 'Daily License Fee'),
			'fio' => Yii::t('app', 'Fio'),
			'is_act' => Yii::t('app', 'Is Act'),
			'is_conctract' => Yii::t('app', 'Is Conctract'),
			'contract_number' => Yii::t('app', 'Contract Number'),
			'act_number' => Yii::t('app', 'Act Number'),
			'balance_license_fee' => Yii::t('app', 'Balance License Fee'),
			'comment' => Yii::t('app', 'Comment'),
			'installation_is_close' => Yii::t('app', 'Installation Is Close'),
			'type' => Yii::t('app', 'Type'),
			'licenseDailyFeeAmountByCars' => null,
			'payments' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('plate', $this->plate, true);
		$criteria->compare('daily_license_fee', $this->daily_license_fee);
		$criteria->compare('fio', $this->fio, true);
		$criteria->compare('is_act', $this->is_act);
		$criteria->compare('is_conctract', $this->is_conctract);
		$criteria->compare('contract_number', $this->contract_number, true);
		$criteria->compare('act_number', $this->act_number, true);
		$criteria->compare('balance_license_fee', $this->balance_license_fee);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('installation_is_close', $this->installation_is_close);
		$criteria->compare('type', $this->type);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}