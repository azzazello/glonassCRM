<?php

/**
 * This is the model base class for the table "bncomplex_account".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BncomplexAccount".
 *
 * Columns in table "bncomplex_account" available as properties of the model,
 * followed by relations of table "bncomplex_account" available as properties of the model.
 *
 * @property integer $id
 * @property string $phone
 * @property string $user
 * @property string $pass
 * @property string $forsearch
 * @property string $date_create
 *
 * @property BncomplexSubscription[] $bncomplexSubscriptions
 */
abstract class BaseBncomplexAccount extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'bncomplex_account';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BncomplexAccount|BncomplexAccounts', $n);
	}

	public static function representingColumn() {
		return 'phone';
	}

	public function rules() {
		return array(
			array('phone, user, pass, forsearch, date_create', 'required'),
			array('phone, user, pass, forsearch', 'length', 'max'=>25),
			array('id, phone, user, pass, forsearch, date_create', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bncomplexSubscriptions' => array(self::HAS_MANY, 'BncomplexSubscription', 'id_account'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'phone' => Yii::t('app', 'Phone'),
			'user' => Yii::t('app', 'User'),
			'pass' => Yii::t('app', 'Pass'),
			'forsearch' => Yii::t('app', 'Forsearch'),
			'date_create' => Yii::t('app', 'Date Create'),
			'bncomplexSubscriptions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('user', $this->user, true);
		$criteria->compare('pass', $this->pass, true);
		$criteria->compare('forsearch', $this->forsearch, true);
		$criteria->compare('date_create', $this->date_create, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}