<?php

/**
 * This is the model base class for the table "nztmodule3.glonass".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Glonass".
 *
 * Columns in table "nztmodule3.glonass" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $num_auto
 * @property string $dates
 * @property string $description
 * @property integer $flag
 * @property string $date_flag
 * @property string $fio
 * @property string $tel1
 * @property string $tel
 * @property integer $alarm1
 * @property string $alarm1_date
 * @property integer $alarm2
 * @property string $alarm2_date
 * @property integer $alarm3
 * @property string $alarm3_date
 * @property integer $black
 * @property string $black_date
 * @property integer $who_black
 * @property string $why_black
 * @property string $device_id
 * @property string $device_pass
 * @property integer $deleted
 * @property string $subject
 * @property integer $provider
 * @property string $balance
 * @property string $delete_date
 *
 */
abstract class BaseGlonass extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'nztmodule3.glonass';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Glonass|Glonasses', $n);
	}

	public static function representingColumn() {
		return 'num_auto';
	}

	public function rules() {
		return array(
			array('num_auto, dates', 'required'),
			array('flag, alarm1, alarm2, alarm3, black, who_black, deleted, provider', 'numerical', 'integerOnly'=>true),
			array('num_auto', 'length', 'max'=>25),
			array('fio', 'length', 'max'=>100),
			array('tel1, tel', 'length', 'max'=>12),
			array('device_id', 'length', 'max'=>20),
			array('device_pass', 'length', 'max'=>8),
			array('balance', 'length', 'max'=>10),
			array('description, date_flag, alarm1_date, alarm2_date, alarm3_date, black_date, why_black, subject, delete_date', 'safe'),
			array('description, flag, date_flag, fio, tel1, tel, alarm1, alarm1_date, alarm2, alarm2_date, alarm3, alarm3_date, black, black_date, who_black, why_black, 700rub, 700rubdates, device_id, device_pass, deleted, subject, provider, balance, delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, num_auto, dates, description, flag, date_flag, fio, tel1, tel, alarm1, alarm1_date, alarm2, alarm2_date, alarm3, alarm3_date, black, black_date, who_black, why_black, device_id, device_pass, deleted, subject, provider, balance, delete_date', 'safe', 'on'=>'search'),
		);
	}

    function defaultScope(){
        return array(
            'condition'=>"deleted=0",
        );
    }

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'num_auto' => Yii::t('app', 'Num Auto'),
			'dates' => Yii::t('app', 'Dates'),
			'description' => Yii::t('app', 'Description'),
			'flag' => Yii::t('app', 'Flag'),
			'date_flag' => Yii::t('app', 'Date Flag'),
			'fio' => Yii::t('app', 'Fio'),
			'tel1' => Yii::t('app', 'Tel1'),
			'tel' => Yii::t('app', 'Tel'),
			'alarm1' => Yii::t('app', 'Alarm1'),
			'alarm1_date' => Yii::t('app', 'Alarm1 Date'),
			'alarm2' => Yii::t('app', 'Alarm2'),
			'alarm2_date' => Yii::t('app', 'Alarm2 Date'),
			'alarm3' => Yii::t('app', 'Alarm3'),
			'alarm3_date' => Yii::t('app', 'Alarm3 Date'),
			'black' => Yii::t('app', 'Black'),
			'black_date' => Yii::t('app', 'Black Date'),
			'who_black' => Yii::t('app', 'Who Black'),
			'why_black' => Yii::t('app', 'Why Black'),

			'device_id' => Yii::t('app', 'Device'),
			'device_pass' => Yii::t('app', 'Device Pass'),
			'deleted' => Yii::t('app', 'Deleted'),
			'subject' => Yii::t('app', 'Subject'),
			'provider' => Yii::t('app', 'Provider'),
			'balance' => Yii::t('app', 'Balance'),
			'delete_date' => Yii::t('app', 'Delete Date'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('num_auto', $this->num_auto, true);
		$criteria->compare('dates', $this->dates, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('flag', $this->flag);
		$criteria->compare('date_flag', $this->date_flag, true);
		$criteria->compare('fio', $this->fio, true);
		$criteria->compare('tel1', $this->tel1, true);
		$criteria->compare('tel', $this->tel, true);
		$criteria->compare('alarm1', $this->alarm1);
		$criteria->compare('alarm1_date', $this->alarm1_date, true);
		$criteria->compare('alarm2', $this->alarm2);
		$criteria->compare('alarm2_date', $this->alarm2_date, true);
		$criteria->compare('alarm3', $this->alarm3);
		$criteria->compare('alarm3_date', $this->alarm3_date, true);
		$criteria->compare('black', $this->black);
		$criteria->compare('black_date', $this->black_date, true);
		$criteria->compare('who_black', $this->who_black);
		$criteria->compare('why_black', $this->why_black, true);

		$criteria->compare('device_id', $this->device_id, true);
		$criteria->compare('device_pass', $this->device_pass, true);
		$criteria->compare('deleted', $this->deleted);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('provider', $this->provider);
		$criteria->compare('balance', $this->balance, true);
		$criteria->compare('delete_date', $this->delete_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}